version: "3.8"

services:
    plex:
        image: ghcr.io/linuxserver/plex
        container_name: plex
        restart: unless-stopped
        runtime: nvidia
        environment:
            - VERSION=docker
            - TZ=Europe/Berlin
            - PUID=1000
            - PGID=1000
            - NVIDIA_VISIBLE_DEVICES=all
        ports:
            - 0.0.0.0:32400:32400
        networks:
            - traefik
        volumes:
            - ./data/plex/:/config/Library/Application Support/Plex Media Server/
            - /mnt/tank/media/anime/:/media/anime/:ro
            - /mnt/tank/media/tv/:/media/tv/:ro
            - /mnt/tank/media/movies/:/media/movies/:ro
            - /mnt/tank/media/hentai/:/media/hentai/:ro
        labels:
            traefik.enable: true
            traefik.http.routers.plex.rule: Host(`plex.topi.wtf`)
            traefik.http.services.plex.loadbalancer.server.port: 32400
            traefik.http.routers.plex.entrypoints: https

    tautulli:
        image: ghcr.io/rickdb/tautulli-plexanisync:master
        container_name: tautulli
        restart: unless-stopped
        env_file:
            - /home/topi/docker/plex/tautulli.env
        environment:
            - TZ=Europe/Berlin
        expose:
            - 8181
        networks:
            - traefik
        volumes:
            - ./data/tautulli/:/config/
        labels:
            traefik.enable: true
            traefik.http.routers.tautulli.rule: Host(`tautulli.topi.wtf`)
            traefik.http.services.tautulli.loadbalancer.server.port: 8181
            traefik.http.routers.tautulli.entrypoints: https

    sonarr:
        image: ghcr.io/linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        environment:
            - TZ=Europe/Berlin
            - DOCKER_MODS=gilbn/theme.park:sonarr
            - PUID=1000
            - PGID=1000
        networks:
            - traefik
        expose:
            - 8989
        volumes:
            - ./data/sonarr/:/config/
            - /mnt/tank/media/anime/:/media/anime/
            - /mnt/tank/media/tv/:/media/tv/
            - /mnt/tank/media/hentai/:/media/hentai/
            - /mnt/tank/media/.import/:/media/.import/
            - /mnt/downloads/:/downloads/:ro
        labels:
            traefik.enable: true
            traefik.http.routers.sonarr.rule: Host(`sonarr.topi.wtf`)
            traefik.http.routers.sonarr.entrypoints: https
            traefik.http.routers.sonarr.middlewares: authelia@docker
            traefik.http.services.sonarr.loadbalancer.server.port: 8989

    radarr:
        image: ghcr.io/linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        environment:
            - TZ=Europe/Berlin
            - DOCKER_MODS=gilbn/theme.park:radarr
            - PUID=1000
            - PGID=1000
        networks:
            - traefik
        expose:
            - 7878
        volumes:
            - ./data/radarr/:/config/
            - /mnt/tank/media/movies/:/media/movies/
            - /mnt/tank/media/.import/:/media/.import/
            - /mnt/downloads/:/downloads/:ro
        labels:
            traefik.enable: true
            traefik.http.routers.radarr.rule: Host(`radarr.topi.wtf`)
            traefik.http.routers.radarr.entrypoints: https
            traefik.http.routers.radarr.middlewares: authelia@docker
            traefik.http.services.radarr.loadbalancer.server.port: 7878

    deluge:
        image: binhex/arch-delugevpn:latest
        container_name: deluge
        restart: unless-stopped
        cap_add:
            - NET_ADMIN
        env_file:
            - ./deluge.env
        environment:
            - PUID=1000
            - PGID=1000
        networks:
            - traefik
        expose:
            - 8112
        volumes:
            - ./data/deluge/:/config/
            - ./data/blackhole/:/blackhole/
            - /mnt/downloads/:/downloads/
        labels:
            traefik.enable: true
            traefik.http.routers.deluge.rule: Host(`deluge.topi.wtf`)
            traefik.http.routers.deluge.entrypoints: https
            traefik.http.routers.deluge.middlewares: authelia@docker
            traefik.http.services.deluge.loadbalancer.server.port: 8112

    jackett:
        image: ghcr.io/linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        environment:
            - TZ=Europe/Berlin
            - AUTO_UPDATE=false
            - DOCKER_MODS=gilbn/theme.park:jackett
            - PUID=1000
            - PGID=1000
        networks:
            - traefik
        expose:
            - 9117
        volumes:
            - ./data/jackett/:/config/
            - ./data/blackhole/:/blackhole/
        labels:
            traefik.enable: true
            traefik.http.routers.jackett.rule: Host(`jackett.topi.wtf`)
            traefik.http.routers.jackett.entrypoints: https
            traefik.http.routers.jackett.middlewares: authelia@docker
            traefik.http.services.jackett.loadbalancer.server.port: 9117

networks:
    traefik:
        external: true
